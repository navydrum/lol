{"version":3,"sources":["components/RotationChampList.js","routes/Main.js","components/Gamerecods.js","routes/UserInfo.js","components/Navigation.js","components/ChampDetail.js","App.js","index.js"],"names":["RotationChampList","champList","console","log","champListArr","JSON","parse","className","map","value","index","to","pathname","state","Main","userId","rotateChamp","isComplete","getUserId","e","setState","target","getRotationChampList","a","axios","get","then","data","this","type","onChange","placeholder","id","React","Component","Gamerecods","win","kill","assist","death","lane","teamId","largestMultiKill","average","multiKilled","cnt","totalCnt","getMultiKilled","toFixed","UserInfo","props","getUserInfo","url","userData","isLoading","location","undefined","history","push","summoner","name","summonerLevel","match","key","summonerName","kills","assists","deaths","Navigation","ChampDetail","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ee8ad84.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport './RotationChampList.css'\r\n\r\nfunction RotationChampList(champList) {\r\n    console.log(\"champ : \", champList.champList);\r\n    var champListArr = JSON.parse(champList.champList);\r\n    console.log(champListArr);\r\n\r\n    return (\r\n        <div className=\"bnrCont\">\r\n            <div className=\"bnr\">\r\n                {champListArr.map((value, index) => <Link to={{\r\n                    pathname : '/aboutChamp/{value}',\r\n                    state : {\r\n                        value\r\n                    }\r\n                }}><div className={'rotateChampArea champImg i'+value}></div></Link>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n RotationChampList.propTypes = {\r\n    champList  :  PropTypes.string.isRequired\r\n}\r\n\r\n\r\n\r\n\r\n//     <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -82px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -164px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -246px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -410px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -492px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -574px'}}></div>\r\n\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -656px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -738px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -820px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -902px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -984px'}}></div>\r\n//                 <div className=\"rotateChampArea champImg\" style={{'background-position' : '0 -1066px'}}></div>\r\n\r\n\r\n\r\n\r\nexport default RotationChampList;","import React from 'react';\r\nimport './Main.css';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport RotationChampList from \"../components/RotationChampList\";\r\n\r\nclass Main extends React.Component{\r\n    state = {\r\n        userId : '',\r\n        rotateChamp : [],\r\n        isComplete : false\r\n    }\r\n\r\n    getUserId = (e) => {\r\n        this.setState({ userId : e.target.value });\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"componentDidMount\");\r\n        this.getRotationChampList();\r\n    }\r\n\r\n    getRotationChampList = async () => {\r\n        \r\n        const url = 'http://203.227.22.137:8000/api/champion/rotation';\r\n\r\n        await axios.get(url).then(data => {\r\n            console.log(\"getRotationChampList : \", data);\r\n            this.setState({ rotateChamp : data.data.data, isComplete : true });\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n       const { userId, isComplete, rotateChamp } = this.state;\r\n       return (\r\n        <div className=\"mainContainer\">\r\n            <div className=\"main_logo_area\">\r\n                <div className=\"main_logo\"></div>\r\n            </div>\r\n            <form className=\"user_search_form\">\r\n                <input type=\"text\" className=\"user_search_form_text\" value={userId} onChange={this.getUserId} placeholder=\"소환사명, 소환사명, ...\" />\r\n                <Link to = {{\r\n                pathname : `/userInfo/${this.state.userId}`,\r\n                state : {\r\n                    id : this.state.userId\r\n                }\r\n                }}><button className=\"user_search_form_button\"><i className=\"search_button_img\">dddd</i></button></Link>\r\n            </form>\r\n         <div className=\"rotateChampionArea\">\r\n             {isComplete ? \r\n             <RotationChampList \r\n                champList = {rotateChamp.champList}/> : \"\"\r\n             }\r\n         </div>            \r\n       </div> \r\n       )\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Gamerecods.css\"\r\n\r\nfunction Gamerecods({ id, win, kill, assist, death, lane, teamId, largestMultiKill }) {\r\n    console.log(\"recod : \", id);\r\n    console.log(\"win : \", win);\r\n    \r\n    var average = (kill + assist)/death;\r\n\r\n    var multiKilled = getMultiKilled(largestMultiKill);\r\n\r\n    return (\r\n        <div className=\"recods\">\r\n            <div className={win ? \"recods_data_win\" : \"recods_data_lose\"}>\r\n                <div className=\"gameResult\">\r\n                    <div className=\"gameType\"></div>\r\n                    <div className=\"playLane\">{ lane }</div>\r\n                    <div className={teamId === 100 ? \"blueTeam\" : \"redTeam\"}>{win ? \"승리\" : \"패배\"}</div>\r\n                </div>\r\n                <div className=\"gameResultInfo\">\r\n                    <div className=\"KDA\">\r\n                        <span className=\"KDA_kill\">{ kill }</span>/\r\n                        <span className=\"KDA_death\">{ death }</span>/\r\n                        <span className=\"KDA_assist\">{ assist}</span>\r\n                    </div>\r\n                    <div className=\"aver\">{average.toFixed(2)} 평점</div>\r\n                    <div className=\"multKilled\">{ multiKilled }</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nfunction getMultiKilled(cnt){\r\n    var totalCnt;\r\n    if(cnt === 2){\r\n        totalCnt = \"더블킬\";\r\n    }else if(cnt === 3){\r\n        totalCnt = \"트리플킬\";\r\n    }else if(cnt === 4){\r\n        totalCnt = \"쿼드라킬\";\r\n    }else if(cnt === 5){\r\n        totalCnt = \"펜타킬\";\r\n    }else{\r\n        totalCnt = '';\r\n    }\r\n\r\n    return totalCnt;\r\n}\r\n\r\n\r\nGamerecods.propTypes = {\r\n    id : PropTypes.string.isRequired,\r\n    win :  PropTypes.bool.isRequired,\r\n    kill : PropTypes.number.isRequired,\r\n    assist : PropTypes.number.isRequired,\r\n    death : PropTypes.number.isRequired,\r\n    lane : PropTypes.string.isRequired,\r\n    teamId : PropTypes.number.isRequired,\r\n    largestMultiKill : PropTypes.number.isRequired\r\n}\r\n\r\nexport default Gamerecods;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Gamerecods from \"../components/Gamerecods\";\r\n\r\nclass UserInfo extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        console.log(\"props : \", props);\r\n        if(props.location.state){\r\n            this.state = {\r\n                isLoading : true,\r\n                id : props.location.state.id,\r\n                userData : []\r\n            };\r\n        }\r\n        \r\n    }\r\n\r\n    getUserInfo = async () => {\r\n        console.log(\"state : \", this.state);\r\n        const url = 'http://203.227.22.137:8000/api/matchinfo/list/summoner/' + this.state.id;\r\n\r\n        await axios.get(url).then(data => {\r\n            console.log(data);\r\n            this.setState({userData : data.data.data, isLoading : false});\r\n        });\r\n\r\n        // const userData = await axios.get(\"http://203.227.22.137:8000/api/matchinfo/list/summoner/\"+state.id);\r\n\r\n        // console.log(\"userData : \", userData);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.location.state === undefined){\r\n            this.props.history.push(\"/\");\r\n        }else{\r\n            this.getUserInfo();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        console.log(\"property : \", this.props);\r\n        console.log(this.state)\r\n\r\n        if(this.props.location.state){\r\n\r\n            console.log(\"data : \", this.state.userData);\r\n            const { isLoading, userData } = this.state;\r\n            console.log(\"param\", this.state);\r\n            return (\r\n                <div>\r\n                    {isLoading ? (\r\n                        <div className=\"Loader\">\r\n                          <span className=\"Loader_text\">Loading...</span>\r\n                        </div>\r\n                        ) : ( \r\n                        <div className=\"recodsContainer\">\r\n                            <div className=\"userInfoContainer\">\r\n                                <div className=\"userInfoArea\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"userColumn\">\r\n                                            <div className=\"userName\">\r\n                                                <span>{userData.summoner.name}</span>\r\n                                                <span className=\"userLevel\">Lv.{userData.summoner.summonerLevel}</span>\r\n                                            </div>\r\n                                         \r\n                                        </div>\r\n                                    <div className=\"userColumn\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"gameResultContainer\">\r\n                            {userData.match.map(data => (\r\n                                <Gamerecods\r\n                                key = {data.id}\r\n                                id = {data.summonerName}\r\n                                win = {data.win}\r\n                                kill = {data.kills}\r\n                                assist = {data.assists}\r\n                                death = {data.deaths}\r\n                                lane = {data.lane}\r\n                                teamId = {data.teamId}\r\n                                largestMultiKill = {data.largestMultiKill}\r\n                            />\r\n                            ))}\r\n                            </div>\r\n                        </div>)}\r\n                </div>\r\n            )\r\n        }else{\r\n            return <span>nullnullnullnullnullnull</span>\r\n        }\r\n    }\r\n}\r\nexport default UserInfo;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Navigation.css'\r\n\r\nfunction Navigation() {\r\n    return (\r\n    <div>\r\n        <ul className=\"navigationMenu\">\r\n            <li><Link to=\"/\">홈</Link></li>\r\n            <li><Link to=\"/\">챔피언 분석</Link></li>\r\n            <li><Link to=\"/\">통계</Link></li>\r\n            <li><Link to=\"/\">랭킹</Link></li>\r\n            <li><Link to=\"/\">프로관전</Link></li>\r\n            <li><Link to=\"/\">커뮤니티</Link></li>\r\n        </ul>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nclass ChampDetail extends React.Component{\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        const { location, history } = this.props;\r\n        if(location.state === undefined){\r\n            history.push(\"/\");\r\n        }\r\n        console.log(location.state);\r\n    }\r\n\r\n    render(){\r\n        console.log(\"champDetail : \", this.props);\r\n        const { location } = this.props;\r\n        if (location.state){\r\n            return <span></span>;\r\n        }else{\r\n            return null;\r\n        }\r\n        \r\n    }\r\n}\r\nexport default ChampDetail;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Main from \"./routes/Main\";\nimport UserInfo from \"./routes/UserInfo\";\nimport Navigation from \"./components/Navigation\";\nimport ChampDetail from \"./components/ChampDetail\";\nimport './components/Navigation.css'\n\nfunction App() {\n  return (\n    <HashRouter>\n        <Navigation />\n        <Route path=\"/\" exact={ true } component={Main}/>\n        <Route path=\"/userInfo/:id\" component={UserInfo}/>\n        <Route path=\"/aboutChamp/:value\" component={ChampDetail}/>\n    </HashRouter>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}